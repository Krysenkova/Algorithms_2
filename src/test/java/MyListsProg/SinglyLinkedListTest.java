/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MyListsProg;

import MyListsProg.data.Student;
import MyListsProg.list.SinglyLinkedList;
import org.junit.Test;
import org.junit.Assert;


public class SinglyLinkedListTest {
    private SinglyLinkedList<Student> provideList() {
        SinglyLinkedList<Student> list = new SinglyLinkedList<>();
        var s1 = new Student("Watson", "John", 1, 3568);
        var s2 = new Student("Holmes", "Sherlock", 5, 7629);
        var s3 = new Student("Moriarty", "James", 3, 4321);
        list.add(s1);
        list.add(s2);
        list.add(s3);
        return list;
    }

    @Test
    public void getTest(){
        SinglyLinkedList<Student> testList = new SinglyLinkedList<>();
        var s1 = new Student("Watson", "John", 1, 3568);
        var s2 = new Student("Holmes", "Sherlock", 5, 7629);
        testList.add(s1);
        testList.add(s2);
        Assert.assertEquals(s2, testList.get(1));
    }

    @Test
    public void addTest() {
        SinglyLinkedList<Student> testList = provideList();
        var s4 = new Student("Hooper", "Molly", 2, 3256);
        testList.add(s4);
        Assert.assertEquals(s4, testList.get(3));
    }

    @Test
    public void addAtIndexTest() {
        SinglyLinkedList<Student> testList = provideList();
        var s4 = new Student("Hooper", "Molly", 2, 3256);
        testList.add(2, s4);
        Assert.assertEquals(s4, testList.get(2));
    }

    @Test
    public void addFirstTest(){
        SinglyLinkedList<Student> testList = provideList();
        var s4 = new Student("Hooper", "Molly", 2, 3256);
        testList.addFirst(s4);
        Assert.assertEquals(s4, testList.get(0));
    }

    @Test
    public void removeTest(){
        SinglyLinkedList<Student> testList = provideList();
        testList.remove(2);
        Assert.assertNull(testList.get(2));
    }

    @Test
    public void clearTest(){
        SinglyLinkedList<Student> testList = provideList();
        testList.clear();
        Assert.assertNull(testList.get(0));
    }

    @Test
    public void sizeTest(){
        SinglyLinkedList<Student> testList = provideList();
        Assert.assertEquals(3, testList.size());
    }

    @Test
    public void printAllTest(){
        //TODO think how to test it
    }

    @Test
    public void isEmptyTrueTest(){
        SinglyLinkedList<Student> testList = provideList();
        testList.clear();
        Assert.assertTrue(testList.isEmpty());
    }
    @Test
    public void isEmptyFalseTest(){
        SinglyLinkedList<Student> testList = provideList();
        Assert.assertFalse(testList.isEmpty());
    }

}

